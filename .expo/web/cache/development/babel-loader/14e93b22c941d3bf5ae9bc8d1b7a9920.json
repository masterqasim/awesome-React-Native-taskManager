{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\vscode\\\\AwesomeNativeExpo\\\\views\\\\PlannerView.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport 'react-native-gesture-handler';\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\nimport EmojiSelector, { Categories } from \"react-native-emoji-selector\";\nimport { Ionicons } from '@expo/vector-icons';\nimport * as firebase from 'firebase';\n\nvar PlannerView = function (_React$Component) {\n  _inherits(PlannerView, _React$Component);\n\n  var _super = _createSuper(PlannerView);\n\n  function PlannerView() {\n    var _this;\n\n    _classCallCheck(this, PlannerView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      dueTime: new Date(),\n      dueDate: new Date(),\n      isdate: false,\n      isTime: false,\n      taskName: '',\n      time: '',\n      feeling: '',\n      addTask: true,\n      tasks: []\n    };\n\n    _this.handleTaskPlanner = function () {\n      var obj = {\n        dueTime: _this.state.dueTime,\n        dueDate: _this.state.dueDate,\n        taskName: _this.state.taskName,\n        time: _this.state.time,\n        feeling: _this.state.feeling\n      };\n\n      if (_this.state.taskName != '') {\n        var task = [];\n        task = _this.state.tasks;\n\n        _this.setState({\n          tasks: []\n        });\n\n        task.push(obj);\n\n        _this.setState({\n          tasks: task\n        });\n      }\n\n      var userUid = firebase.auth().currentUser.uid;\n\n      _this.setState({\n        addTask: !_this.state.addTask\n      });\n    };\n\n    _this.showDatePicker = function () {\n      _this.setState({\n        isdate: true\n      });\n    };\n\n    _this.showTimePicker = function () {\n      _this.setState({\n        isTime: true\n      });\n    };\n\n    _this.hideDatePicker = function () {\n      _this.setState({\n        isTime: false\n      });\n\n      _this.setState({\n        isdate: false\n      });\n    };\n\n    _this.handleConfirm = function (date) {\n      _this.setState({\n        dueDate: date\n      });\n\n      _this.hideDatePicker();\n    };\n\n    _this.handleConfirm1 = function (date) {\n      _this.setState({\n        dueTime: date\n      });\n\n      _this.hideDatePicker();\n    };\n\n    _this.deleteTask = function (i) {};\n\n    return _this;\n  }\n\n  _createClass(PlannerView, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.state);\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }\n      }, !this.state.addTask && React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 39\n        }\n      }, React.createElement(StatusBar, {\n        barStyle: \"light-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }\n      }), React.createElement(Image, {\n        source: require(\"../assets/loginHeader.png\"),\n        style: {\n          marginTop: -220,\n          marginLeft: -50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }\n      }), React.createElement(Image, {\n        source: require(\"../assets/loginFooter.png\"),\n        style: {\n          position: \"absolute\",\n          bottom: -325,\n          right: -255\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: styles.Title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }\n      }, \" Add New Task\")), React.createElement(View, {\n        style: styles.form,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.inputTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }\n      }, \"Task Name\"), React.createElement(TextInput, {\n        style: styles.input,\n        autoCapitalize: \"none\",\n        placeholder: \"Task name\",\n        onChangeText: function onChangeText(taskName) {\n          return _this2.setState({\n            taskName: taskName\n          });\n        },\n        value: this.state.taskName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }\n      })), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.inputTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }\n      }, \"How long will this task take to\"), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }\n      }, React.createElement(TextInput, {\n        style: styles.input,\n        autoCapitalize: \"none\",\n        onChangeText: function onChangeText(time) {\n          return _this2.setState({\n            time: time\n          });\n        },\n        placeholder: \"Hours\",\n        value: this.state.time,\n        keyboardType: 'numeric',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }\n      })), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.inputTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 29\n        }\n      }, \"When is this task due ?\"), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 29\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.select,\n        onPress: this.showDatePicker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 34\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"#FFF\",\n          fontWeight: \"500\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 37\n        }\n      }, \"select date\")), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 34\n        }\n      }, this.state.dueDate.toLocaleDateString()), React.createElement(TouchableOpacity, {\n        style: styles.select,\n        onPress: this.showTimePicker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 34\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"#FFF\",\n          fontWeight: \"500\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 37\n        }\n      }, \"select Time\")), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 34\n        }\n      }, this.state.dueTime.toLocaleTimeString())), React.createElement(DateTimePickerModal, {\n        isVisible: this.state.isTime,\n        mode: \"time\",\n        onConfirm: this.handleConfirm1,\n        onCancel: this.hideDatePicker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 29\n        }\n      }), React.createElement(DateTimePickerModal, {\n        isVisible: this.state.isdate,\n        mode: \"date\",\n        onConfirm: this.handleConfirm,\n        onCancel: this.hideDatePicker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 29\n        }\n      })), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.inputTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 29\n        }\n      }, \"How do you feel about this task ?\"), React.createElement(TextInput, {\n        style: styles.input,\n        autoCapitalize: \"none\",\n        onChangeText: function onChangeText(feeling) {\n          return _this2.setState({\n            feeling: feeling\n          });\n        },\n        placeholder: \"Feelings\",\n        value: this.state.feeling,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 29\n        }\n      }))))), this.state.addTask && React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 18\n        }\n      }, React.createElement(Image, {\n        source: require(\"../assets/loginFooter.png\"),\n        style: {\n          position: \"absolute\",\n          bottom: -325,\n          right: -255\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 23\n        }\n      }), React.createElement(View, {\n        style: styles.Title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 29\n        }\n      }, \"Task Activity Planner\")), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }\n      }, React.createElement(Ionicons, {\n        name: \"filter\",\n        size: 24,\n        color: \"#ccc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 29\n        }\n      }), React.createElement(Ionicons, {\n        name: \"sort-by-alpha\",\n        size: 24,\n        color: \"#ccc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 29\n        }\n      })), React.createElement(FlatList, {\n        style: styles.list,\n        data: this.state.tasks,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item,\n              index = _ref.index;\n          return React.createElement(View, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 29\n            }\n          }, React.createElement(View, {\n            style: styles.listItemCont,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 33\n            }\n          }, React.createElement(Text, {\n            style: styles.listItem,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 37\n            }\n          }, item.taskName), React.createElement(View, {\n            style: {\n              flexDirection: 'row'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 37\n            }\n          }, React.createElement(Text, {\n            style: styles.nestedItem,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 41\n            }\n          }, item.dueTime.toLocaleTimeString()), React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 41\n            }\n          }, item.dueDate.toLocaleDateString()))), React.createElement(View, {\n            style: styles.hr,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 33\n            }\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 22\n        }\n      })), React.createElement(TouchableOpacity, {\n        style: styles.button,\n        onPress: this.handleTaskPlanner,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 17\n        }\n      }, !this.state.addTask ? React.createElement(Text, {\n        style: {\n          color: \"#FFF\",\n          fontWeight: \"500\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }\n      }, \"Add Task To Planner\") : React.createElement(Text, {\n        style: {\n          color: \"#FFF\",\n          fontWeight: \"500\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }\n      }, \"Add New Task\")));\n    }\n  }]);\n\n  return PlannerView;\n}(React.Component);\n\nexport { PlannerView as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 50\n  },\n  form: {\n    marginBottom: 48,\n    marginHorizontal: 30\n  },\n  inputTitle: {\n    color: \"#8A8F9E\",\n    fontSize: 10,\n    textTransform: \"uppercase\",\n    marginTop: 10\n  },\n  input: {\n    borderBottomColor: \"#8A8F9E\",\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    height: 40,\n    fontSize: 15,\n    color: \"#161F3D\"\n  },\n  Title: {\n    fontSize: 20,\n    alignItems: \"center\",\n    marginBottom: 10\n  },\n  headerText: {\n    fontSize: 20,\n    textAlign: \"center\",\n    margin: 10,\n    fontWeight: \"bold\"\n  },\n  TextInputStyle: {\n    textAlign: 'center',\n    height: 40,\n    borderRadius: 10,\n    borderWidth: 2,\n    borderColor: '#009688',\n    marginBottom: 10\n  },\n  button: {\n    marginHorizontal: 55,\n    backgroundColor: \"#E9446A\",\n    borderRadius: 4,\n    height: 52,\n    width: 300,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    position: 'absolute',\n    bottom: 0,\n    marginBottom: 36\n  },\n  timePicker: {\n    marginTop: 20\n  },\n  select: {\n    marginHorizontal: 10,\n    backgroundColor: \"#E9446A\",\n    borderRadius: 4,\n    height: 20,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: 8,\n    marginTop: 7,\n    marginBottom: 7\n  },\n  list: {\n    width: \"100%\",\n    height: \"80%\"\n  },\n  listItem: {\n    paddingTop: 2,\n    paddingBottom: 2,\n    fontSize: 18\n  },\n  hr: {\n    height: 1,\n    marginTop: 3,\n    backgroundColor: \"#ccc\",\n    marginLeft: 10,\n    marginRight: 10\n  },\n  listItemCont: {\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    marginLeft: 15\n  },\n  nestedItem: {\n    marginRight: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/HP/Documents/vscode/AwesomeNativeExpo/views/PlannerView.js"],"names":["React","DateTimePickerModal","EmojiSelector","Categories","Ionicons","firebase","PlannerView","state","dueTime","Date","dueDate","isdate","isTime","taskName","time","feeling","addTask","tasks","handleTaskPlanner","obj","task","setState","push","userUid","auth","currentUser","uid","showDatePicker","showTimePicker","hideDatePicker","handleConfirm","date","handleConfirm1","deleteTask","i","console","log","styles","container","require","marginTop","marginLeft","position","bottom","right","Title","form","inputTitle","input","flexDirection","justifyContent","select","color","fontWeight","toLocaleDateString","toLocaleTimeString","list","item","index","listItemCont","listItem","nestedItem","hr","button","Component","StyleSheet","create","flex","marginBottom","marginHorizontal","fontSize","textTransform","borderBottomColor","borderBottomWidth","hairlineWidth","height","alignItems","headerText","textAlign","margin","TextInputStyle","borderRadius","borderWidth","borderColor","backgroundColor","width","timePicker","padding","paddingTop","paddingBottom","marginRight"],"mappings":"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","sourcesContent":["import 'react-native-gesture-handler'\nimport React from 'react'\nimport {View, Button,TouchableOpacity,Image,FlatList, StatusBar,Text, StyleSheet,TextInput} from 'react-native'\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\nimport EmojiSelector, { Categories } from \"react-native-emoji-selector\";\nimport { Ionicons } from '@expo/vector-icons' \nimport * as firebase from 'firebase'\n\nexport default class PlannerView extends React.Component {\n    state ={\n        dueTime: new Date(),\n        dueDate:new Date() ,\n        isdate: false,\n        isTime: false,\n        taskName:'',\n        time:'',\n        feeling:'',\n        addTask:true,\n        tasks:[\n            \n        ]\n    }\n    handleTaskPlanner = () => {\n      let obj ={\n        dueTime:this.state.dueTime ,\n        dueDate:this.state.dueDate,\n        taskName:this.state.taskName,\n        time:this.state.time,\n        feeling:this.state.feeling\n      }\n      if(this.state.taskName != ''){\n        let task=[]\n        task=this.state.tasks;\n        this.setState({tasks:[]})\n        task.push(obj)\n          this.setState({tasks:task})\n      }\n      let userUid = firebase.auth().currentUser.uid;\n        // firebase.database().ref('tasks/' + userUid).set(obj).then(()=>{\n\n        // })\n        this.setState({addTask:!this.state.addTask})\n\n    }\n    showDatePicker = () => {\n        this.setState({isdate:true})\n      };\n      showTimePicker = () => {\n        this.setState({isTime:true})\n      };\n      hideDatePicker = () => {\n        this.setState({isTime:false})\n        this.setState({isdate:false})\n      };\n     \n      handleConfirm = date => {\n        this.setState({dueDate:date})\n        this.hideDatePicker();\n      }\n      handleConfirm1 = date => {\n        this.setState({dueTime:date})\n        this.hideDatePicker();\n      };\n      deleteTask = i => {\n        // this.setState(\n        //   prevState => {\n        //     let tasks = prevState.tasks.slice();\n    \n        //     tasks.splice(i, 1);\n    \n        //     return { tasks: tasks };\n        //   },\n        //   () => Tasks.save(this.state.tasks)\n        // );\n      };\n    render () {\n        console.log(this.state)\n        return (\n            <View style={styles.container}>\n               {!this.state.addTask &&<View>\n                <StatusBar barStyle=\"light-content\"></StatusBar>\n                <Image source={require('../assets/loginHeader.png')} style={{marginTop: -220, marginLeft: -50}}></Image>\n                <Image source={require('../assets/loginFooter.png')} style={{position: \"absolute\", bottom:  -325, right: -255}}></Image>\n                <View style={styles.Title}> \n                    <Text> Add New Task</Text>\n                </View>\n                <View style={styles.form}>\n                    <View>\n                        <Text style={styles.inputTitle}>Task Name</Text>\n                        <TextInput \n                            style={styles.input} \n                            autoCapitalize=\"none\" \n                            placeholder='Task name'\n                            onChangeText={taskName => this.setState({taskName})}\n                            value={this.state.taskName}>\n                        </TextInput>\n                    </View>\n                    <View>\n                        <Text style={styles.inputTitle}>How long will this task take to</Text>\n                        <View>\n                        <TextInput \n                            style={styles.input} \n                            autoCapitalize=\"none\" \n                            onChangeText={time => this.setState({time})}\n                            placeholder='Hours'\n                            value={this.state.time}\n                            keyboardType={'numeric'}\n                        >\n                        </TextInput> \n                            {/* <Button title=\"How long will this task take to\" style={styles.timePicker} onPress={this.showDatePicker} /> */}\n                            {/* <TouchableOpacity style={styles.button} onPress={this.showDatePicker}>\n                                <Text style={{color: \"#FFF\", fontWeight: \"500\"}}>How long will this task take to</Text>\n                            </TouchableOpacity>\n                            <DateTimePickerModal\n                                isVisible={this.state.isTime}\n                                mode=\"time\"\n                                onConfirm={this.handleConfirm}\n                                onCancel={this.hideDatePicker}\n                            /> */}\n                        </View>\n                        <View>\n                            <Text style={styles.inputTitle}>When is this task due ?</Text>\n                            <View style={{flexDirection:'row' ,justifyContent:'space-between'}}>\n                                 <TouchableOpacity style={styles.select} onPress={this.showDatePicker}>\n                                    <Text style={{color: \"#FFF\", fontWeight: \"500\"}}>select date</Text>\n                                 </TouchableOpacity>\n                                 <Text>{this.state.dueDate.toLocaleDateString()}</Text>\n                                 <TouchableOpacity style={styles.select} onPress={this.showTimePicker}>\n                                    <Text style={{color: \"#FFF\", fontWeight: \"500\"}}>select Time</Text>\n                                 </TouchableOpacity>\n                                 <Text>{this.state.dueTime.toLocaleTimeString()}</Text>\n                            </View>\n\n                            <DateTimePickerModal\n                                isVisible={this.state.isTime}\n                                mode=\"time\"\n                                onConfirm={this.handleConfirm1}\n                                onCancel={this.hideDatePicker}\n                            />\n                            <DateTimePickerModal\n                                isVisible={this.state.isdate}\n                                mode=\"date\"\n                                onConfirm={this.handleConfirm}\n                                onCancel={this.hideDatePicker}\n                            />\n                        </View>\n                        <View>\n                            {/* <EmojiSelector\n                            category={Categories.symbols}\n                            onEmojiSelected={emoji => console.log(emoji)}\n                            /> */}\n                            <Text style={styles.inputTitle}>How do you feel about this task ?</Text>\n                            <TextInput \n                                style={styles.input} \n                                autoCapitalize=\"none\" \n                                onChangeText={feeling => this.setState({feeling})}\n                                placeholder='Feelings'\n                                value={this.state.feeling}\n                            >\n                            </TextInput> \n                        </View>\n                    </View>\n                </View>\n                 </View>}\n                 {this.state.addTask && \n                 <View>\n                      <Image source={require('../assets/loginFooter.png')} style={{position: \"absolute\", bottom:  -325, right: -255}}></Image>\n               \n                        <View style={styles.Title}> \n                            <Text>Task Activity Planner</Text>\n                        </View>\n                        <View>\n                            <Ionicons name=\"filter\" size={24} color='#ccc'/>\n                            <Ionicons name=\"sort-by-alpha\" size={24} color='#ccc'/>\n                        </View>\n                     <FlatList\n                        style={styles.list}\n                        data={this.state.tasks}\n                        renderItem={({ item, index }) =>\n                            <View>\n                                <View style={styles.listItemCont}>\n                                    <Text style={styles.listItem}>\n                                    {item.taskName}\n                                    </Text>\n                                    <View style={{flexDirection:'row'}}>\n                                        <Text style={styles.nestedItem}>{item.dueTime.toLocaleTimeString()}</Text>\n                                        <Text>{item.dueDate.toLocaleDateString()}</Text>\n                                    </View>\n                                    {/* <Button title=\"X\" onPress={() => this.deleteTask(index)} /> */}\n                                </View>\n                                <View style={styles.hr} />\n                            </View>}\n                        />\n                </View>}\n                <TouchableOpacity style={styles.button} onPress={this.handleTaskPlanner}>\n                     {!this.state.addTask ?\n                    <Text style={{color: \"#FFF\", fontWeight: \"500\"}}>Add Task To Planner</Text>:\n                    <Text style={{color: \"#FFF\", fontWeight: \"500\"}}>Add New Task</Text>}\n                 </TouchableOpacity>\n            </View>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        marginTop:50,\n        // alignItems: \"center\",\n        // justifyContent: \"center\"\n    },\n    form: {\n        marginBottom: 48,\n        marginHorizontal: 30,\n    },\n    inputTitle: {\n        color: \"#8A8F9E\",\n        fontSize: 10,\n        textTransform: \"uppercase\",\n        marginTop:10,\n    },\n    input: {\n        borderBottomColor: \"#8A8F9E\",\n        borderBottomWidth: StyleSheet.hairlineWidth,\n        height: 40,\n        fontSize: 15,\n        color: \"#161F3D\"\n    },\n    Title: {\n        fontSize: 20,\n        alignItems: \"center\",\n        marginBottom:10,\n    },\n    headerText: {  \n        fontSize: 20,  \n        textAlign: \"center\",  \n        margin: 10,  \n        fontWeight: \"bold\"  \n    },\n    TextInputStyle: {  \n        textAlign: 'center',  \n        height: 40,  \n        borderRadius: 10,  \n        borderWidth: 2,  \n        borderColor: '#009688',  \n        marginBottom: 10  \n    },\n    button: {\n        marginHorizontal: 55,\n        backgroundColor: \"#E9446A\",\n        borderRadius: 4,\n        height: 52,\n        width:300,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        position: 'absolute',\n        bottom:0,\n         marginBottom: 36\n    },\n    timePicker:{\n        marginTop:20,\n    },\n    select:{\n        // backgroundColor: \"#ccc\",\n        // borderRadius: 4,\n        // height: 20,\n        // alignItems: \"center\",\n        marginHorizontal: 10,\n        backgroundColor: \"#E9446A\",\n        borderRadius: 4,\n        height: 20,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        padding:8,\n        marginTop:7,\n        marginBottom:7\n    },\n    list: {\n        width: \"100%\",\n        height:\"80%\"\n      },\n      listItem: {\n        paddingTop: 2,\n        paddingBottom: 2,\n        fontSize: 18\n      },\n      hr: {\n        height: 1,\n        marginTop:3,\n        backgroundColor: \"#ccc\",\n        marginLeft:10,\n        marginRight:10\n      },\n      listItemCont: {\n        flexDirection: \"column\",\n        // alignItems: \"center\",\n        justifyContent: \"space-between\",\n        marginLeft:15\n      },\n      nestedItem:{\n          marginRight:10\n      }\n})"]},"metadata":{},"sourceType":"module"}